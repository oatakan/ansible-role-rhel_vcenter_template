---
- block:
    - name: create temporary directory
      file:
        path: "{{ temp_directory }}/ks_iso"
        state: directory

    - name: create ks.cfg file
      template:
        src: "{{ linux_ks_folder }}/ks.cfg.j2"
        dest: "{{ temp_directory }}/ks_iso/ks.cfg"

    - name: download template iso file
      get_url:
        url: "{{ template_iso_url }}"
        dest: "{{ temp_directory }}/{{ distro_name }}_template.iso"
      register: download_template_iso
      until: download_template_iso is success
      delay: 3
      retries: 5

    - name: set list of directories to copy
      set_fact:
        template_iso_list_of_directories_to_extract:
          - /EFI
          - /images
          - /isolinux

    - name: get a list of files from template iso
      shell: >
        isoinfo -f -R -i {{ playbook_dir }}/{{ temp_directory }}/{{ distro_name }}_template.iso |
        grep -E "^{{ template_iso_list_of_directories_to_extract | join('|^') }}"
      register: template_iso_list_of_files

    - name: copy files from template iso to target
      shell: |
        isoinfo -f -R -i {{ playbook_dir }}/{{ temp_directory }}/{{ distro_name }}_template.iso |\
        grep -E "^{{ template_iso_list_of_directories_to_extract | join('|^') }}" | while read line; do
          d=$(dirname $line)
          od=".${d}"
          [ -f $od ] && rm -f $od
          [ -d $od ] || mkdir -p $od
          [ -d ".${line}" ] || isoinfo -R -i \
          {{ playbook_dir }}/{{ temp_directory }}/{{ distro_name }}_template.iso -x $line > ".${line}"
        done
      args:
        chdir: "{{ playbook_dir }}/{{ temp_directory }}/ks_iso"

    - name: modify boot files
      replace:
        path: "{{ playbook_dir }}/{{ temp_directory }}/ks_iso{{ item }}"
        regexp: '(quiet)$'
        replace: '\1 ks=cdrom:/ks.cfg'
      loop:
        - /EFI/BOOT/grub.cfg
        - /EFI/BOOT/BOOT.conf
        - /isolinux/isolinux.cfg
      when: item in template_iso_list_of_files.stdout_lines

    - name: change timeout to 3 seconds (efi)
      lineinfile:
        path: "{{ playbook_dir }}/{{ temp_directory }}/ks_iso/EFI/BOOT/grub.cfg"
        regexp: '^set timeout='
        line: 'set timeout=3'
      when: ('/EFI/BOOT/grub.cfg' in template_iso_list_of_files.stdout_lines)

    - name: change timeout to 3 seconds (isolinux)
      lineinfile:
        path: "{{ playbook_dir }}/{{ temp_directory }}/ks_iso/isolinux/isolinux.cfg"
        regexp: '^timeout'
        line: 'timeout 30'
      when: ('/isolinux/isolinux.cfg' in template_iso_list_of_files.stdout_lines)

    - name: create iso
      command: >
        mkisofs -U -A "KS_ISO" -V "KS_ISO"
        -volset "KS_ISO" -J -joliet-long -r -v -T -x ./lost+found
        -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4
        -boot-info-table -eltorito-alt-boot -e images/efiboot.img -no-emul-boot
        -o {{ playbook_dir }}/{{ temp_directory }}/linux_{{ distro_name }}_ks_autogen.iso .
      args:
        chdir: "{{ playbook_dir }}/{{ temp_directory }}/ks_iso"

    - include_tasks: datastore_upload.yml
  always:
    - name: remove temporary files
      file:
        path: "{{ temp_directory }}/{{ item }}"
        state: absent
      loop:
        - linux_{{ distro_name }}_ks_autogen.iso
        - "{{ distro_name }}_template.iso"
        - ks_iso/