---

- name: Block for shutting down and verifying VM power state
  block:

#    - name: run scheduled shutdown task
#      vmware_vm_shell:
#        hostname: "{{ lookup('env', 'VMWARE_HOST') | default(providers.vcenter.hostname) }}"
#        username: "{{ lookup('env', 'VMWARE_USER') | default(providers.vcenter.username) }}"
#        password: "{{ lookup('env', 'VMWARE_PASSWORD') | default(providers.vcenter.password) }}"
#        datacenter: "{{ providers.vcenter.datacenter }}"
#        validate_certs: false
#        vm_id: "{{ template.name }}"
#        vm_username: root
#        vm_password: "{{ local_administrator_password }}"
#        vm_shell: '/sbin/shutdown'
#        vm_shell_args: ' -P now'

    - name: Shutdown guest VM via VMware tools
      community.vmware.vmware_guest:
        hostname: "{{ lookup('env', 'VMWARE_HOST') | default(providers.vcenter.hostname) }}"
        username: "{{ lookup('env', 'VMWARE_USER') | default(providers.vcenter.username) }}"
        password: "{{ lookup('env', 'VMWARE_PASSWORD') | default(providers.vcenter.password) }}"
        validate_certs: false
        datacenter: "{{ providers.vcenter.datacenter }}"
        cluster: "{{ providers.vcenter.cluster }}"
        uuid: "{{ instance.instance.uuid | default(omit) }}"
        name: "{{ template.name }}"
        state: "shutdownguest"
      async: 7200
      poll: 0
      register: shutdown
      when: template is defined
      tags: post-config

    - name: Wait for server to stop responding to SSH
      ansible.builtin.wait_for:
        host: "{{ template_vm_ip_address }}"
        port: "{{ vm_ansible_port | default('22') }}"
        timeout: 120
        state: stopped
      tags: post-config

    - name: Wait for VM status to be poweredOff in vCenter
      community.vmware.vmware_guest_info:
        hostname: "{{ lookup('env', 'VMWARE_HOST') | default(providers.vcenter.hostname) }}"
        username: "{{ lookup('env', 'VMWARE_USER') | default(providers.vcenter.username) }}"
        password: "{{ lookup('env', 'VMWARE_PASSWORD') | default(providers.vcenter.password) }}"
        datacenter: "{{ providers.vcenter.datacenter }}"
        validate_certs: false
        name: "{{ template.name }}"
      register: vm_fact
      until: vm_fact.instance is defined and vm_fact.instance.hw_power_status == 'poweredOff'
      delay: 5
      retries: 30
      tags: post-config

  rescue:
    - name: Ignoring any error during guest shutdown sequence
      ansible.builtin.debug:
        msg: "Ignoring error during guest shutdown sequence..."
      tags: post-config

- name: Ensure VM is powered off (force stop if necessary)
  community.vmware.vmware_guest:
    hostname: "{{ lookup('env', 'VMWARE_HOST') | default(providers.vcenter.hostname) }}"
    username: "{{ lookup('env', 'VMWARE_USER') | default(providers.vcenter.username) }}"
    password: "{{ lookup('env', 'VMWARE_PASSWORD') | default(providers.vcenter.password) }}"
    validate_certs: false
    datacenter: "{{ providers.vcenter.datacenter }}"
    cluster: "{{ providers.vcenter.cluster }}"
    uuid: "{{ instance.instance.uuid | default(omit) }}"
    name: "{{ template.name }}"
    cdrom: []
    state: "poweredoff"
  async: 7200
  poll: 0
  register: stop
  when: template is defined
  tags: post-config

- name: Wait for instance to power off
  ansible.builtin.async_status:
    jid: "{{ stop.ansible_job_id }}"
  register: instance
  until: instance.finished
  retries: "{{ instance_wait_retry_limit }}"
  delay: 10
  tags: post-config

- name: Reconfigure VM to remove CD/DVD drives after shutdown
  community.vmware.vmware_guest:
    hostname: "{{ lookup('env', 'VMWARE_HOST') | default(providers.vcenter.hostname) }}"
    username: "{{ lookup('env', 'VMWARE_USER') | default(providers.vcenter.username) }}"
    password: "{{ lookup('env', 'VMWARE_PASSWORD') | default(providers.vcenter.password) }}"
    validate_certs: false
    datacenter: "{{ providers.vcenter.datacenter }}"
    cluster: "{{ providers.vcenter.cluster }}"
    uuid: "{{ instance.instance.uuid | default(omit) }}"
    name: "{{ template.name }}"
    cdrom:
      - controller_number: 0
        unit_number: 0
        state: absent
      - controller_number: 0
        unit_number: 1
        state: absent
    state: present
  when: template is defined
  tags: post-config